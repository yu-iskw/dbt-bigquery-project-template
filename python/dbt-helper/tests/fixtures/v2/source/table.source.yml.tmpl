{#
    It is a template for a BigQuery table.
    SEE: https://docs.getdbt.com/reference/source-properties/
#}
{%- import "macros.jinja" as macros -%}

{%- set source_name = '{}__{}__{}'.format(macros.normalize_project_id(project_alias), dataset, table) -%}
---
# It was generated by dbt-helper=={{ dbt_helper_version }}.
# THIS_IS_MY_CUSTOM_TEMPLATE
version: 2

sources:
  - name: {{ dataset }}
    database: "{{ macros.to_raw_expression( macros.get_var_project(project_alias) ) }}"
    tables:
      # dbt source ID: `{{- 'source("{}", "{}")'.format(dataset, source_name) -}}`
      - name: {{ source_name }}
        identifier: {{ identifier | default(table, true) }}

        {% raw -%}
        loaded_at_field: CreatedAt  # replace this if necessary
        freshness:
          warn_after:
            count: 24
            period: hour  # minute | hour | day
          error_after:
            count: 36
            period: hour  # minute | hour | day
        {%- endraw %}

        description: |
          {% if table_description is not none -%}
          {{ table_description | indent(width=10, first=False) -}}
          {% else -%}
          ## Overview
          Please briefly describe the table/view.
          It would be awesome to include how to create the table too.

          ## Special Notes
          Please describe points to note to use the table/view, if exists.

          ## Example Query
          ```sql
          ...
          ```

          ## Links
          * ...
          * ...
          {%- endif %}

        {% if tags|length > 0 -%}
        tags:
          {%- for tag in tags %}
          - '{{ tag }}'
          {%- endfor %}
        {%- else -%}
        {% raw -%}
        tags: []
        {%- endraw %}
        {%- endif %}

        # meta will be written into BigQuery labels by dbt-helper.
        {% if labels | length > 0 -%}
        meta:
          {%- for k, v in labels.items() %}
          {{ k }}: "{{ v }}"
          {%- endfor %}
        {%- else -%}
        meta: {}
        {%- endif %}

        columns:
          {%- for column in columns %}
          - name: {{ column["name"] }}
            {% if column["description"] is none or column["description"]|length == 0 -%}
            description: ""
            {%- else -%}
            description: {{ column["description"] }}
            {%- endif %}
          {%- endfor %}

